{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EidriiaN\\\\Desktop\\\\Facultate\\\\Proiecte personale\\\\ReactJSfreecodecamp\\\\ObiectiveTuristiceReact\\\\Frontend\\\\src\\\\components\\\\Test.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TestCard from \"./TestCard\";\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Test() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [dbList, setdbList] = useState([]);\n  const addToDB = () => {\n    Axios.post(\"http://localhost:3001/create\", {\n      name: name,\n      email: email,\n      password: password\n    }).then(() => {\n      console.log(\"succes\");\n    });\n  };\n  const getFromDB = () => {\n    Axios.get(\"http://localhost:3001/getFromDB\").then(response => {\n      setdbList(response.data);\n    });\n  };\n  const cards = getFromDB.response.map(item => {\n    return /*#__PURE__*/_jsxDEV(TestCard, {\n      item: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: Event => {\n          setName(Event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: Event => {\n          setEmail(Event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: Event => {\n          setPassword(Event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addToDB,\n        children: \" SendData \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getFromDB,\n      children: \" GetData  \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), \"sec\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(Test, \"C1dLDEaVmGnGjG73yqMQToPImkg=\");\n_c = Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","TestCard","Axios","Test","name","setName","email","setEmail","password","setPassword","dbList","setdbList","addToDB","post","then","console","log","getFromDB","get","response","data","cards","map","item","id","Event","target","value"],"sources":["C:/Users/EidriiaN/Desktop/Facultate/Proiecte personale/ReactJSfreecodecamp/ObiectiveTuristiceReact/Frontend/src/components/Test.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport TestCard from \"./TestCard\";\r\nimport Axios from 'axios';\r\n\r\n\r\nexport default function Test(){\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const [dbList, setdbList] = useState([]);\r\n\r\n    const addToDB = () => {\r\n        Axios.post(\"http://localhost:3001/create\", {\r\n            name: name,\r\n            email: email,\r\n            password: password\r\n        }).then(() =>{\r\n            console.log(\"succes\");\r\n        });\r\n    };\r\n\r\n    const getFromDB = () => {\r\n        Axios.get(\"http://localhost:3001/getFromDB\").then((response) =>{\r\n            setdbList(response.data)\r\n        });\r\n    };\r\n\r\n    const cards = getFromDB.response.map(item=>{\r\n\r\n        return(\r\n            <TestCard\r\n\r\n                key={item.id} \r\n                item={item}\r\n            />\r\n        )\r\n    })\r\n\r\n\r\n    return(\r\n\r\n        <div className=\"test\">\r\n            <form>\r\n                <label>Nume</label>\r\n                <input\r\n                    type=\"text\"\r\n                    onChange={(Event) => {\r\n                        setName(Event.target.value);\r\n                    }}\r\n                />\r\n                <label>Email</label>\r\n                <input \r\n                    type=\"text\"\r\n                    onChange={(Event) => {\r\n                        setEmail(Event.target.value);\r\n                    }} \r\n                />\r\n                <label>Password</label>\r\n                <input \r\n                    type=\"text\"\r\n                    onChange={(Event) => {\r\n                        setPassword(Event.target.value);\r\n                    }} \r\n                />\r\n                <button onClick={addToDB}> SendData </button>\r\n            </form>\r\n            <button onClick={getFromDB}> GetData  </button>\r\n            {/* {dbList.map((val ,key) =>{\r\n\r\n                return <div> \r\n                    <h4>{val.name}</h4>\r\n                    <h4>{val.email}</h4>\r\n                    <h4>{val.password}</h4>\r\n                </div>    \r\n            })} */}\r\n            sec\r\n\r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAG1B,eAAe,SAASC,IAAI,GAAE;EAAA;EAE1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMY,OAAO,GAAG,MAAM;IAClBV,KAAK,CAACW,IAAI,CAAC,8BAA8B,EAAE;MACvCT,IAAI,EAAEA,IAAI;MACVE,KAAK,EAAEA,KAAK;MACZE,QAAQ,EAAEA;IACd,CAAC,CAAC,CAACM,IAAI,CAAC,MAAK;MACTC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACzB,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,SAAS,GAAG,MAAM;IACpBf,KAAK,CAACgB,GAAG,CAAC,iCAAiC,CAAC,CAACJ,IAAI,CAAEK,QAAQ,IAAI;MAC3DR,SAAS,CAACQ,QAAQ,CAACC,IAAI,CAAC;IAC5B,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,KAAK,GAAGJ,SAAS,CAACE,QAAQ,CAACG,GAAG,CAACC,IAAI,IAAE;IAEvC,oBACI,QAAC,QAAQ;MAGL,IAAI,EAAEA;IAAK,GADNA,IAAI,CAACC,EAAE;MAAA;MAAA;MAAA;IAAA,QAEd;EAEV,CAAC,CAAC;EAGF,oBAEI;IAAK,SAAS,EAAC,MAAM;IAAA,wBACjB;MAAA,wBACI;QAAA,UAAO;MAAI;QAAA;QAAA;QAAA;MAAA,QAAQ,eACnB;QACI,IAAI,EAAC,MAAM;QACX,QAAQ,EAAGC,KAAK,IAAK;UACjBpB,OAAO,CAACoB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;QAC/B;MAAE;QAAA;QAAA;QAAA;MAAA,QACJ,eACF;QAAA,UAAO;MAAK;QAAA;QAAA;QAAA;MAAA,QAAQ,eACpB;QACI,IAAI,EAAC,MAAM;QACX,QAAQ,EAAGF,KAAK,IAAK;UACjBlB,QAAQ,CAACkB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;QAChC;MAAE;QAAA;QAAA;QAAA;MAAA,QACJ,eACF;QAAA,UAAO;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAQ,eACvB;QACI,IAAI,EAAC,MAAM;QACX,QAAQ,EAAGF,KAAK,IAAK;UACjBhB,WAAW,CAACgB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;QACnC;MAAE;QAAA;QAAA;QAAA;MAAA,QACJ,eACF;QAAQ,OAAO,EAAEf,OAAQ;QAAA,UAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1C,eACP;MAAQ,OAAO,EAAEK,SAAU;MAAA,UAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAS,EAQxC,KAGX;EAAA;IAAA;IAAA;IAAA;EAAA,QAAM;AAEd;AAAC,GA5EuBd,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}